name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable
    - uses: actions/checkout@v4
    - name: Setup Calibre
      uses: ./.github/actions/setup-calibre
      with:
        version: "8.7.0"       # or "latest"
        cache-key-suffix: ""    # set e.g. "v2" when you need to bust cache
    - name: Check Calibre version
      run: |
        ebook-convert --version
        ebook-meta --version
    - name: Setup cache
      uses: Swatinem/rust-cache@v2
      with:
        save-if: ${{ github.ref == 'refs/heads/master' }}
    - name: Install sqlx-cli
      run: cargo install sqlx-cli
    - name: create database
      run: |-
        sqlx database create
        sqlx migrate run
    - name: Check formating
      run: cargo fmt --all --check
    - name: Check compilation
      run: cargo check --all --verbose
    - name: Run unit tests
      run: cargo test --all --exclude mbs4-e2e-tests --verbose

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable
    - uses: actions/checkout@v4
    - name: Setup Calibre
      uses: ./.github/actions/setup-calibre
      with:
        version: "8.7.0"       # or "latest"
        cache-key-suffix: ""    # set e.g. "v2" when you need to bust cache
    - name: Setup cache
      uses: Swatinem/rust-cache@v2
      with:
        save-if: ${{ github.ref == 'refs/heads/master' }}
    - name: Install sqlx-cli
      run: cargo install sqlx-cli
    - name: create database
      run: |-
        sqlx database create
        sqlx migrate run
    - name: Run e2e tests
      run: cargo test -p mbs4-e2e-tests --release --verbose
